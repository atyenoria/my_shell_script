#!/bin/bash
#for sublime debug tool

#ruby
BUILD_RUBY="/Users/jima/.rbenv/shims/ruby"

#sh
BUILD_SH="/bin/sh"

#php
BUILD_PHP="/usr/local/bin/php"

BUILD_LOG="/Users/jima/log_build/log_sublime"

#成功、失敗画像
IMG_SUCCEED=/Users/jima/log_build/build_succeed.jpg
IMG_FAILED=/Users/jima/log_build/build_faild.jpeg

#build path
BUILD_PATH=`pbpaste`

function build_tty_monitor(){
redis-cli set sublime_build_tty_status 0
redis-cli set sublime_build_tty_tail_status 0    #shの場合は終了ステータスが不明の為感知でない #sh 標準入力が発生していたら注意
build_tty=`redis-cli --raw get sublime_build_tty`
build_tty_tail=`redis-cli --raw get sublime_build_tty_tail`

sudo ttyecho -n /dev/$build_tty "
"
sudo ttyecho -n /dev/$build_tty "redis-cli set sublime_build_tty_status 1
"

sudo ttyecho -n /dev/$build_tty_tail "
"
sudo ttyecho -n /dev/$build_tty_tail "redis-cli set sublime_build_tty_tail_status 1
"

sudo ttyecho -n /dev/$build_tty_tail "redis-cli set sublime_build_tty_tail_status 1
"

sudo ttyecho -n /dev/ttys003 "redis-cli set sublime_build_tty_tail_status 1
"

sleep 0.3
build_tty_end_flag=`redis-cli --raw get sublime_build_tty_status|sed -n 1p`
build_tty_tail_end_flag=`redis-cli --raw get sublime_build_tty_tail_status|sed -n 1p`
# if [ $build_tty_end_flag == 0 -o $sublime_build_tty_tail_status == 0 ];
if [ $build_tty_tail_end_flag == 0 -o $build_tty_end_flag == 0 ];
then
#detect tty is not working
osascript -e 'tell application "Keyboard Maestro Engine" to do script "4F7A1E47-A671-4A74-913C-79B53256563C"'
fi

}



function build_status(){
sleep 1

build_end_flag=`redis-cli --raw get sublime_build_end_flag|sed -n 1p`

while [[ $build_end_flag == 0 ]]; do
build_end_flag=`redis-cli --raw get sublime_build_end_flag|sed -n 1p`
done


build_status=`redis-cli --raw get sublime_build_status|sed -n 1p`

if [ $build_status == 1 ]; 
then
#成功
terminal-notifier -message "$FORMAT build" -title Succeed -sound Submarine -contentImage $IMG_SUCCEED
else
#失敗
terminal-notifier -message "$FORMAT build" -title Failed -sound Basso -contentImage $IMG_FAILED
fi

}

function build_status_sh(){
terminal-notifier -message Build -title "Shell Script" -sound default 
}

function build_status_exec(){
terminal-notifier -message Build -title "Exec File" -sound default 
}



function build(){
build_tty=`redis-cli --raw get sublime_build_tty`
build_tty_tail=`redis-cli --raw get sublime_build_tty_tail`
redis-cli set sublime_build_status 0
redis-cli set sublime_build_end_flag 0
BUILD=`redis-cli --raw get sublime_build_fmt`

sudo ttyecho -n /dev/$build_tty "export PS1=""
"

sudo ttyecho -n /dev/$build_tty "echo $BUILD
"



#(under dev)use tail or debug
sublime_build_kill_tail_tty

BUILD_DIR="${BUILD_PATH%/*}"
sudo ttyecho -n /dev/$build_tty "cd $BUILD_DIR
"

sudo ttyecho -n /dev/$build_tty "clear && $BUILD $BUILD_PATH > $BUILD_LOG 2>&1 && redis-cli set sublime_build_status 1  && redis-cli set sublime_build_end_flag 1
"
# sudo ttyecho -n /dev/$build_tty "clear && $BUILD $BUILD_PATH > $BUILD_LOG 2>&1 && redis-cli set sublime_build_status 1  && redis-cli set sublime_build_end_flag 1
# "
# sudo ttyecho -n /dev/$build_tty "clear && $BUILD $BUILD_PATH|tee $BUILD_LOG && redis-cli set sublime_build_status 1  && redis-cli set sublime_build_end_flag 1
# "


sublime_build_kill_tail_tty
sudo ttyecho -n /dev/$build_tty_tail "clear && tail -f $BUILD_LOG
"


sudo ttyecho -n /dev/$build_tty "redis-cli set sublime_build_end_flag 1
"
}





########################################################################################
sublime_build_kill_tail_tty
build_tty_monitor

clear
#パスの拡張子を取り出す
TYPE=${BUILD_PATH##*.}
case $TYPE in
	sh)
		#対話式TMP
		# osascript -e 'tell application "Keyboard Maestro Engine" to do script "7FF4D9E6-B13D-433B-A5B9-4A7B88E6EA37"'
		#実行出力
		#$BUILD_SH $TMP > $BUILD_LOG 2>&1
		redis-cli set sublime_build_fmt $BUILD_SH
		build
		build_status_sh
		;;
	rb)
		FORMAT="Ruby"
		# $BUILD_RUBY $TMP > $BUILD_LOG 2>&1
		redis-cli set sublime_build_fmt $BUILD_RUBY
		build
		build_status
		;;
	php)
		FORMAT="PHP"
		redis-cli set sublime_build_fmt $BUILD_PHP
		$BUILD=$BUILD_PHP
		# $BUILD_PHP $TMP > $BUILD_LOG 2>&1	 
		build_status
		;;
	*)
		# echo "実行ファイル" > $BUILD_LOG 2>&1
		redis-cli set sublime_build_fmt $BUILD_PATH
		unset BUILD_PATH
		build
		build_status_exec
		# osascript -e 'tell application "Keyboard Maestro Engine" to do script "BAFBF368-2E1A-41C4-9F8A-62870A86BEB5"'
		;;
esac

